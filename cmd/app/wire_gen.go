// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"gin-layout/internal/biz"
	"gin-layout/internal/conf"
	"gin-layout/internal/data"
	"gin-layout/internal/router"
	"gin-layout/internal/service"
	"gin-layout/pkg/logx"
)

// Injectors from wire.go:

// initApp init app application.
func initApp(appConfig *conf.AppConfig) (*App, func(), error) {
	logger := logx.NewLogger(appConfig)
	db, err := data.NewDB(appConfig, logger)
	if err != nil {
		return nil, nil, err
	}
	client, err := data.NewRDB(appConfig)
	if err != nil {
		return nil, nil, err
	}
	dataData, err := data.NewData(db, client)
	if err != nil {
		return nil, nil, err
	}
	iUcUserRepo := data.NewUcUserRepo(dataData)
	transaction := data.NewTransaction(dataData)
	ucUserUseCase := biz.NewUcUserUseCase(iUcUserRepo, transaction)
	userService := service.NewUserService(ucUserUseCase)
	requestBeforeHandel := router.NewBeforeHandel(userService)
	engine := router.NewRouter(userService, appConfig, requestBeforeHandel, logger)
	app := newApp(appConfig, engine, logger)
	return app, func() {
	}, nil
}
